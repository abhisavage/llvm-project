# extra/omp_impact_recommender/rules.py

keyword_map = {
    "codegen": [
        "llvm/lib/Target/AArch64/AArch64ISelLowering.cpp::shouldSinkVectorOfPtrs",
        "flang/lib/Optimizer/CodeGen/Target.cpp::getSizeAndAlignment",
        "flang/lib/Optimizer/CodeGen/Target.cpp::mergeClass",
        "flang/lib/Optimizer/CodeGen/Target.cpp::passOnTheStack",
        "flang/lib/Optimizer/CodeGen/Target.cpp::postMerge",
        "flang/lib/Optimizer/CodeGen/TargetRewrite.cpp::clearMembers",
        "flang/lib/Optimizer/CodeGen/TargetRewrite.cpp::doComplexArg",
        "flang/lib/Optimizer/CodeGen/TargetRewrite.cpp::lowerComplexSignatureArg",
        "flang/lib/Optimizer/CodeGen/TargetRewrite.cpp::setMembers",
        "llvm/lib/CodeGen/AsmPrinter/AccelTable.cpp::encodeIdxParent",
        "mlir/lib/Conversion/NVGPUToNVVM/NVGPUToNVVM.cpp::isMbarrierShared",
        "mlir/lib/Conversion/NVGPUToNVVM/NVGPUToNVVM.cpp::memRefDescriptor",
        "mlir/lib/Dialect/NVGPU/TransformOps/NVGPUTransformOps.cpp::buildTryWaitParity"
    ],
    "parse": [
        "llvm/lib/Parse/ParseOpenMP.cpp::ParseOpenMPDirective",
        "llvm/include/clang/Parse/Parser.h::TryParseOpenMPDirective",
        "clang/lib/Parse/ParseOpenMP.cpp::getOpenMPClauseName",
        "lld/COFF/Driver.cpp::parseDebugKind"
    ],
    "runtime": [
        "llvm/projects/openmp/runtime/src/kmp_tasking.cpp::__kmpc_omp_taskwait",
        "llvm/projects/openmp/runtime/src/kmp_runtime.cpp::__kmp_launch_thread",
        "openmp/libomptarget/DeviceRTL/src/Synchronization.cpp::__atomic_fetch_add",
        "openmp/libomptarget/DeviceRTL/src/Synchronization.cpp::__atomic_fetch_and",
        "openmp/libomptarget/DeviceRTL/src/Synchronization.cpp::__atomic_fetch_max",
        "openmp/libomptarget/DeviceRTL/src/Synchronization.cpp::__atomic_fetch_min",
        "openmp/libomptarget/DeviceRTL/src/Synchronization.cpp::__atomic_fetch_or",
        "openmp/libomptarget/DeviceRTL/src/Synchronization.cpp::__atomic_fetch_xor"
    ],
    "atomic": [
        "llvm/lib/Target/AArch64/AArch64ISelLowering.cpp::shouldSinkVectorOfPtrs",
        "openmp/libomptarget/DeviceRTL/src/Synchronization.cpp::__atomic_fetch_add",
        "openmp/libomptarget/DeviceRTL/src/Synchronization.cpp::__atomic_fetch_and",
        "openmp/libomptarget/DeviceRTL/src/Synchronization.cpp::__atomic_fetch_max",
        "openmp/libomptarget/DeviceRTL/src/Synchronization.cpp::__atomic_fetch_min",
        "openmp/libomptarget/DeviceRTL/src/Synchronization.cpp::__atomic_fetch_or",
        "openmp/libomptarget/DeviceRTL/src/Synchronization.cpp::__atomic_fetch_xor"
    ],
    "flush": [
        "llvm/lib/Target/AArch64/AArch64ISelLowering.cpp::shouldSinkVectorOfPtrs"
    ],
    "masked": [
        "llvm/lib/Target/AArch64/AArch64ISelLowering.cpp::shouldSinkVectorOfPtrs"
    ],
    "ordered": [
        "llvm/lib/Target/AArch64/AArch64ISelLowering.cpp::shouldSinkVectorOfPtrs"
    ],
    "sections": [
        "llvm/lib/Target/AArch64/AArch64ISelLowering.cpp::shouldSinkVectorOfPtrs"
    ],
    "single": [
        "llvm/lib/Target/AArch64/AArch64ISelLowering.cpp::shouldSinkVectorOfPtrs"
    ],
    "target": [
        "llvm/lib/Target/AArch64/AArch64ISelLowering.cpp::shouldSinkVectorOfPtrs",
        "flang/lib/Optimizer/CodeGen/Target.cpp::getSizeAndAlignment",
        "flang/lib/Optimizer/CodeGen/Target.cpp::mergeClass",
        "flang/lib/Optimizer/CodeGen/Target.cpp::passOnTheStack",
        "flang/lib/Optimizer/CodeGen/Target.cpp::postMerge",
        "flang/lib/Optimizer/CodeGen/TargetRewrite.cpp::clearMembers",
        "flang/lib/Optimizer/CodeGen/TargetRewrite.cpp::doComplexArg",
        "flang/lib/Optimizer/CodeGen/TargetRewrite.cpp::lowerComplexSignatureArg",
        "flang/lib/Optimizer/CodeGen/TargetRewrite.cpp::setMembers"
    ],
    "for": [
        "llvm/lib/Target/AArch64/AArch64ISelLowering.cpp::shouldSinkVectorOfPtrs",
        "clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp::relocateOffloadSection",
        "llvm/lib/Frontend/Offloading/Utility.cpp::GlobalVariable",
        "llvm/lib/Frontend/Offloading/Utility.cpp::Triple",
        "lld/ELF/SyntheticSections.cpp::SyntheticSection",
        "lld/ELF/Writer.cpp::getSectionRank"
    ],
    "ir": [
        "llvm/lib/Target/AArch64/AArch64ISelLowering.cpp::shouldSinkVectorOfPtrs"
    ],
    "ast": [
        "llvm/lib/Target/AArch64/AArch64ISelLowering.cpp::shouldSinkVectorOfPtrs"
    ],
    "declare": [
        "clang-tools-extra/clangd/TUScheduler.cpp::update",
        "clang/lib/Parse/ParseDecl.cpp::getLangOpts",
        "clang/test/Analysis/issue-70464.cpp::clang_analyzer_dump",
        "clang/test/Analysis/issue-70464.cpp::entry",
        "clang/test/ParserHLSL/hlsl_parameter_modifiers.cpp::fn2",
        "clang/test/ParserHLSL/hlsl_parameter_modifiers.cpp::fn3",
        "clang/test/ParserHLSL/hlsl_parameter_modifiers.cpp::fn4",
        "clang/test/ParserHLSL/hlsl_parameter_modifiers.cpp::fn5",
        "clang/test/ParserHLSL/hlsl_parameter_modifiers.cpp::fn6",
        "clang/test/ParserHLSL/hlsl_parameter_modifiers.cpp::fn7",
        "clang/test/ParserHLSL/hlsl_parameter_modifiers.cpp::implicitFn",
        "clang/test/ParserHLSL/hlsl_parameter_modifiers.cpp::inFn",
        "clang/test/ParserHLSL/hlsl_parameter_modifiers.cpp::inoutFn",
        "clang/test/ParserHLSL/hlsl_parameter_modifiers.cpp::outFn",
        "clang/unittests/AST/ASTImporterTest.cpp::bar",
        "clang/unittests/AST/ASTImporterTest.cpp::foo",
        "flang/lib/Semantics/resolve-names.cpp::MustBeScalar",
        "flang/lib/Semantics/resolve-names.cpp::NoteScalarSpecificationArgument",
        "libc/test/include/stdbit_test.cpp::stdc_leading_zeros_uc",
        "libc/test/include/stdbit_test.cpp::stdc_leading_zeros_ui",
        "libc/test/include/stdbit_test.cpp::stdc_leading_zeros_ul",
        "libc/test/include/stdbit_test.cpp::stdc_leading_zeros_ull",
        "libc/test/include/stdbit_test.cpp::stdc_leading_zeros_us",
        "libcxx/test/std/utilities/function.objects/refwrap/refwrap.const/type_conv_ctor.pass.cpp::main",
        "lldb/source/Target/StackFrame.cpp::temp",
        "lldb/test/API/functionalities/data-formatter/vector-types/main.cpp::__attribute__",
        "llvm/tools/llvm-special-case-list-fuzzer/special-case-list-fuzzer.cpp::Payload",
        "mlir/lib/Dialect/Transform/IR/TransformOps.cpp::applySequenceBlock",
        "mlir/lib/Dialect/Transform/IR/TransformOps.cpp::emitDefiniteFailure",
        "mlir/lib/Dialect/Transform/Transforms/InterpreterPass.cpp::initialize",
        "mlir/lib/Dialect/Transform/Transforms/InterpreterPass.cpp::runOnOperation",
        "mlir/lib/Dialect/Transform/Transforms/InterpreterPass.cpp::signalPassFailure",
        "mlir/lib/Dialect/Transform/Transforms/InterpreterPass.cpp::success",
        "mlir/lib/Dialect/Transform/Transforms/PreloadLibraryPass.cpp::failure",
        "mlir/lib/Dialect/Transform/Transforms/PreloadLibraryPass.cpp::initialize",
        "mlir/lib/Dialect/Transform/Transforms/PreloadLibraryPass.cpp::runOnOperation",
        "mlir/lib/Dialect/Transform/Transforms/PreloadLibraryPass.cpp::signalPassFailure",
        "mlir/lib/Dialect/Transform/Transforms/PreloadLibraryPass.cpp::success",
        "mlir/lib/Dialect/Transform/Transforms/TransformInterpreterPassBase.cpp::emitError",
        "mlir/lib/Dialect/Transform/Transforms/TransformInterpreterPassBase.cpp::success",
        "mlir/lib/Dialect/Transform/Transforms/TransformInterpreterUtils.cpp::emitError",
        "mlir/lib/Dialect/Transform/Transforms/TransformInterpreterUtils.cpp::failure"
    ],
    "simd": [
        "clang/lib/AST/ExprConstant.cpp::Success",
        "clang/lib/AST/Type.cpp::isSVESizelessBuiltinType",
        "clang/lib/Sema/SemaChecking.cpp::ExprError",
        "clang/lib/Sema/SemaExpr.cpp::CheckVectorElementsTraitOperandType",
        "clang/test/CodeGen/SystemZ/builtins-systemz-error2.c::__attribute__",
        "clang/test/CodeGen/SystemZ/builtins-systemz-error2.c::__builtin_s390_vaq",
        "clang/test/CodeGen/builtin_vectorelements.c::test_builtin_vectorelements_riscv32m2",
        "clang/test/CodeGen/builtin_vectorelements.c::test_builtin_vectorelements_riscv64",
        "clang/test/CodeGen/builtin_vectorelements.c::test_builtin_vectorelements_riscv8",
        "clang/test/CodeGen/builtin_vectorelements.c::test_builtin_vectorelements_sve16",
        "clang/test/CodeGen/builtin_vectorelements.c::test_builtin_vectorelements_sve32",
        "clang/test/CodeGen/builtin_vectorelements.c::test_builtin_vectorelements_sve8",
        "clang/test/OpenMP/simd_private_taskloop_codegen.cpp::main",
        "clang/test/OpenMP/simd_private_taskloop_codegen.cpp::tmain",
        "clang/test/Sema/builtin_vectorelements.c::__attribute__",
        "clang/test/Sema/builtin_vectorelements.c::test_builtin_vectorelements",
        "clang/test/Sema/convertvector.c::__builtin_convertvector",
        "clang/test/SemaCXX/builtin_vectorelements.cpp::__builtin_vectorelements",
        "clang/test/SemaCXX/builtin_vectorelements.cpp::consteval_elements",
        "clang/test/SemaCXX/builtin_vectorelements.cpp::test_bad_constexpr",
        "flang/lib/Lower/OpenMP.cpp::RetTy",
        "flang/lib/Lower/OpenMP.cpp::dsp",
        "flang/lib/Lower/OpenMP.cpp::isWorkshareSimdConstruct",
        "flang/lib/Optimizer/Transforms/OMPLoopIndexMemToReg.cpp::LoopProcessorHelper",
        "flang/lib/Optimizer/Transforms/OMPLoopIndexMemToReg.cpp::allUsesInLoop",
        "flang/lib/Optimizer/Transforms/OMPLoopIndexMemToReg.cpp::failure",
        "flang/lib/Optimizer/Transforms/OMPLoopIndexMemToReg.cpp::isAllocaRemovable",
        "flang/lib/Optimizer/Transforms/OMPLoopIndexMemToReg.cpp::isDeclareRemovable",
        "flang/lib/Optimizer/Transforms/OMPLoopIndexMemToReg.cpp::process",
        "flang/lib/Optimizer/Transforms/OMPLoopIndexMemToReg.cpp::pushAllocaIntoLoop",
        "flang/lib/Optimizer/Transforms/OMPLoopIndexMemToReg.cpp::pushDeclareIntoLoop",
        "flang/lib/Optimizer/Transforms/OMPLoopIndexMemToReg.cpp::runOnOperation",
        "flang/lib/Optimizer/Transforms/OMPLoopIndexMemToReg.cpp::success",
        "libc/src/__support/HashTable/generic/bitmask_impl.inc::load",
        "libc/src/__support/HashTable/generic/bitmask_impl.inc::mask_available",
        "libc/src/__support/HashTable/generic/bitmask_impl.inc::match_byte",
        "libc/src/__support/HashTable/generic/bitmask_impl.inc::repeat_byte",
        "libc/src/__support/HashTable/sse2/bitmask_impl.inc::load",
        "libc/src/__support/HashTable/sse2/bitmask_impl.inc::mask_available",
        "libc/src/__support/HashTable/sse2/bitmask_impl.inc::match_byte",
        "libc/test/src/__support/hash_test.cpp::counters",
        "libc/test/src/__support/hash_test.cpp::mem",
        "libc/test/src/__support/hash_test.cpp::offset",
        "libc/test/src/__support/hash_test.cpp::popcnt",
        "libcxx/test/std/experimental/simd/simd.class/simd_ctor_conversion.pass.cpp::constexpr",
        "libcxx/test/std/experimental/simd/simd.class/simd_ctor_conversion.pass.cpp::main",
        "libcxx/test/std/experimental/simd/simd.class/simd_ctor_conversion.pass.cpp::operator",
        "libcxx/test/std/experimental/simd/simd.class/simd_ctor_default.pass.cpp::main",
        "libcxx/test/std/experimental/simd/simd.class/simd_ctor_default.pass.cpp::operator",
        "libcxx/test/std/experimental/simd/simd.class/simd_ctor_generator.pass.cpp::main",
        "libcxx/test/std/experimental/simd/simd.class/simd_ctor_generator.pass.cpp::operator",
        "libcxx/test/std/experimental/simd/simd.class/simd_ctor_load.pass.cpp::main",
        "libcxx/test/std/experimental/simd/simd.class/simd_ctor_load.pass.cpp::operator",
        "libcxx/test/std/experimental/simd/simd.class/simd_subscr.pass.cpp::main",
        "libcxx/test/std/experimental/simd/simd.class/simd_subscr.pass.cpp::operator",
        "libcxx/test/std/experimental/simd/simd.mask.class/simd_mask_ctor_conversion.pass.cpp::constexpr",
        "libcxx/test/std/experimental/simd/simd.mask.class/simd_mask_ctor_conversion.pass.cpp::main",
        "libcxx/test/std/experimental/simd/simd.mask.class/simd_mask_ctor_conversion.pass.cpp::operator",
        "libcxx/test/std/experimental/simd/simd.mask.class/simd_mask_ctor_default.pass.cpp::main",
        "libcxx/test/std/experimental/simd/simd.mask.class/simd_mask_ctor_default.pass.cpp::operator",
        "libcxx/test/std/experimental/simd/simd.mask.class/simd_mask_ctor_load.pass.cpp::main",
        "libcxx/test/std/experimental/simd/simd.mask.class/simd_mask_ctor_load.pass.cpp::operator",
        "libcxx/test/std/experimental/simd/simd.mask.class/simd_mask_subscr.pass.cpp::main",
        "libcxx/test/std/experimental/simd/simd.mask.class/simd_mask_subscr.pass.cpp::operator",
        "libcxx/test/std/experimental/simd/simd.reference/reference_assignment.pass.cpp::constexpr",
        "libcxx/test/std/experimental/simd/simd.reference/reference_assignment.pass.cpp::main",
        "libcxx/test/std/experimental/simd/simd.reference/reference_assignment.pass.cpp::operator",
        "libcxx/test/std/experimental/simd/simd.reference/reference_value_type.pass.cpp::main",
        "libcxx/test/std/experimental/simd/simd.reference/reference_value_type.pass.cpp::operator"
    ]
} 